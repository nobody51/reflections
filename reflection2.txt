What happens when you initialize a repository? Why do you need to do it?

Git allows the use of git commands within that directory.
You do this to enable version control.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is like a platform or loading bay that allows us to see what is about to go where.
The obejcts will only move if you commit.
This ensures that you know exactly what you're commiting.

How can you use the staging area to make sure you have one commit per logical change?

By controlling what I add to the staging area, I control how big or small my commits are.
I can edit my working directory and make multiple logical changes but make a commmit per logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When I want to try add new, experimental things, or create an alternative way using the orignal master branch.
Branches help in trying out new things without losing the master.

How do the diagrams help you visualize the branch structure?

They provide a dynamic way of understanding the flow of your version control.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

We get the master branch with the coins branch implemented on it.
It is merged both in the diagram and in code.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Automatic merging makes things easier for the user but may be a cause of bugs.
Doing merges manually is tiresome, but if done correctly, will retain the necessary parts without running into bugs.